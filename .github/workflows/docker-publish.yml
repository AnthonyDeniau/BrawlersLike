name: Docker Publish Release

on:
  push:
    # Publish `master` as Docker `latest` image.
    branches:
      - release

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

  # Run tests for any PRs.
  pull_request:

env:
  # TODO: Change variable to your image's name.
  IMAGE_NAME: brawlerlike/backend

jobs:
  # Run tests.
  # See also https://docs.docker.com/docker-hub/builds/automated-testing/
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Run tests
        run: |
          docker-compose --file docker-compose.test.yml build
          docker-compose --file docker-compose.test.yml run sut

  # Push image to GitHub Packages.
  # See also https://docs.docker.com/docker-hub/builds/
  push:
    # Ensure test job passes before pushing image.
    needs: test

    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v2

      - name: Log into GitHub Container Registry
        # TODO: Create a PAT with `read:packages` and `write:packages` scopes and save it as an Actions secret `CR_PAT`
        run: echo "${{ secrets.PACKAGE_PAT }}" | docker login https://ghcr.io -u ${{ github.actor }} --password-stdin
      - id: backend
        uses: ./.github/actions/docker-build-push
        with:
          image-name: brawlerlike/backend
          dockerfile-path: ./backend/
      - id: nginx
        uses: ./.github/actions/docker-build-push
        with:
          image-name: brawlerlike/nginx
          dockerfile-path: ./docker/nginx/
      - id: prometheus
        uses: ./.github/actions/docker-build-push
        with:
          image-name: brawlerlike/prometheus
          dockerfile-path: ./docker/prometheus/

  deploy:
    needs: push
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: copy new docker-compose.prod.yml & envprod to remote server
        run: |
          sshpass -p ${{secrets.OVH_1_PASSWORD}} -v scp -o "StrictHostKeyChecking no" ./docker-compose.prod.yml ${{secrets.OVH_1_USER}}@${{secrets.OVH_1_IP}}:./docker-compose.yml
          sshpass -p ${{secrets.OVH_1_PASSWORD}} -v scp -o "StrictHostKeyChecking no" ./envprod ${{secrets.OVH_1_USER}}@${{secrets.OVH_1_IP}}:./envprod
          sshpass -p ${{secrets.OVH_1_PASSWORD}} -v ssh -o "StrictHostKeyChecking no" ${{secrets.OVH_1_USER}}@${{secrets.OVH_1_IP}} "echo -e '\nDJANGO_SECRET_KEY=${{secrets.DJANGO_SECRET_KEY}}' >> ./envprod" 
          sshpass -p ${{secrets.OVH_1_PASSWORD}} -v ssh -o "StrictHostKeyChecking no" ${{secrets.OVH_1_USER}}@${{secrets.OVH_1_IP}} "echo -e 'POSTGRES_PASSWORD=${{secrets.POSTGRES_PASSWORD}}' >> ./envprod"
      - name: restart docker compose
        run: |
          sshpass -p ${{secrets.OVH_1_PASSWORD}} -v ssh -o "StrictHostKeyChecking no" ${{secrets.OVH_1_USER}}@${{secrets.OVH_1_IP}} "docker-compose pull && docker-compose up -d"
